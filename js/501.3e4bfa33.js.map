{"version":3,"file":"js/501.3e4bfa33.js","mappings":"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","sources":["webpack://hello-world/./src/views/MinesweeperView.vue","webpack://hello-world/./src/views/MinesweeperView.vue?43ba"],"sourcesContent":["<template lang=\"\">\n  <div class=\"game\">\n    <table @contextmenu.prevent>\n      <tr v-for=\"(y) in grid_h\" :key=\"y\">\n        <td v-for=\"(x) in grid_w\" :key=\"x\">\n          <div class=\"cell\" @click=\"click(x-1,y-1)\" @mousedown.right.prevent='rclick(x-1,y-1)' :class=\"{'open-cell':tryGet(isOpen_grid,x-1,y-1,false)}\">\n            <span v-if=\"getDisplayType(x-1,y-1)=='T'\" class=\"indicator\">{{ getDisplayCharacter(x-1,y-1) }}</span>\n            <i class=\"bi bi-flag-fill\" v-if=\"getDisplayType(x-1,y-1)=='F'\"></i>\n            <i class=\"bi bi-heartbreak-fill\" v-if=\"getDisplayType(x-1,y-1)=='B'\"></i>\n          </div>\n        </td>\n      </tr>\n    </table>\n    <span>{{ display_time }}</span>\n  </div>\n  <router-link to=\"/\" id=\"backlink\">Index</router-link>\n</template>\n<script>\nimport { useToast } from \"vue-toastification\";\nexport default {\n  data() { return {\n    visible_grid: [['',''],[]],\n    hidden_grid: [['','B',3],[4,5,6]],\n    isOpen_grid: [[false, false],[false, false]],\n    grid_w: 9,\n    grid_h: 9,\n    bombs: 20,\n    generate_grid_on_click: true,\n    game_over: false,\n    // Timer\n    start_time: 0,\n    timer_loop: null,\n    display_time: \"00:00.00\"\n  }},\n  methods: {\n    randomNumber(min, max) {\n      return Math.floor(Math.random() * (max - min + 1) + min)\n    },\n    getNeighbours(x, y) {\n      let neighbours = []\n      const diffs = [[-1,-1],[0,-1],[1,-1],[-1,0],[1,0],[-1,1],[0,1],[1,1]]\n      for (const pos of diffs) {\n        const spot_x = pos[0] + x\n        const spot_y = pos[1] + y\n        if (spot_x < 0)\n          continue\n        if (spot_y < 0)\n          continue\n        if (spot_x > this.grid_w-1)\n          continue\n        if (spot_y > this.grid_h-1)\n          continue\n        neighbours.push([spot_x, spot_y])\n      }\n      return neighbours\n    },\n    tryGet(from,x,y,default_value='') {\n      let current = from[y]\n      if (current === undefined)\n        return default_value\n      current = current[x]\n      if (current === undefined)\n        return default_value\n      return current\n    },\n    getDisplayType(x,y) {\n      if (this.getDisplayCharacter(x,y) === 'F')\n        return 'F' // Flag icon\n      if (this.getDisplayCharacter(x,y) === 'B')\n        return 'B' // Bomb icon\n      return 'T' // Text\n    },\n    getDisplayCharacter(x,y) {\n      return this.tryGet(this.visible_grid,x,y,'')\n    },\n    click(x,y) {\n      if (this.game_over)\n        return\n      if (this.tryGet(this.visible_grid,x,y,'') === 'F')\n        return\n      if (this.generate_grid_on_click){\n        this.generateGrid(x,y)\n        this.generate_grid_on_click = false\n        this.startTime()\n      }\n      this.popOpen(x,y)\n    },\n    rclick(x,y) {\n      if (this.game_over)\n        return\n      if (this.generate_grid_on_click)\n        return\n      if (this.isOpen_grid[y][x])\n        return\n      if (this.visible_grid[y][x] === '')\n        this.visible_grid[y][x] = 'F'\n      else if (this.visible_grid[y][x] === 'F')\n        this.visible_grid[y][x] = ''\n    },\n    popOpen(x,y) {\n      if (this.isOpen_grid[y][x])\n        return\n      const value = this.hidden_grid[y][x]\n      this.visible_grid[y][x] = value\n      this.isOpen_grid[y][x] = true\n      if (value === '') {\n        for (const neighbour of this.getNeighbours(x,y)) {\n          const neighbour_x = neighbour[0]\n          const neighbour_y = neighbour[1]\n          if (!this.isOpen_grid[neighbour_y][neighbour_x])\n            this.popOpen(neighbour_x, neighbour_y)\n        }\n      }\n      else if (value === 'B') {\n        this.loseGame()\n      }\n      this.checkWinGame()\n    },\n    loseGame() {\n      this.endGame()\n      for (let y = 0; y < this.grid_h; y++) {\n        for (let x = 0; x < this.grid_w; x++) {\n          const hidden = this.hidden_grid[y][x]\n          const visible = this.visible_grid[y][x]\n          if (visible === 'F' && hidden === 'B')\n            continue\n          this.visible_grid[y][x] = hidden\n        }\n      }\n    },\n    checkWinGame() {\n      let unopened = 0\n      for (let y = 0; y < this.grid_h; y++) {\n        for (let x = 0; x < this.grid_w; x++) {\n          if (this.hidden_grid[y][x] === 'B')\n            continue\n          if (this.isOpen_grid[y][x])\n            continue\n          unopened++\n        }\n      }\n      if (unopened === 0) {\n        this.winGame()\n      }\n    },\n    endGame() {\n      this.game_over = true\n      this.stopTimer()\n    },\n    winGame() { \n      if (this.game_over)\n        return\n      this.endGame()\n      for (let y = 0; y < this.grid_h; y++) {\n        for (let x = 0; x < this.grid_w; x++) {\n          let hidden = this.hidden_grid[y][x]\n          if (hidden === 'B')\n            hidden = 'F'\n          this.visible_grid[y][x] = hidden\n          this.isOpen_grid[y][x] = true\n        }\n      }\n      this.$confetti.addConfetti()\n      useToast()(`You won in ${this.display_time}`, {timeout: 10000})\n    },\n    generateGrid(start_x, start_y) {\n      // Empty Grid\n      let new_grid = []\n      let empty_grid = []\n      let false_grid = []\n      for (let y = 0; y < this.grid_h; y++) {\n        let new_row = []\n        let empty_row = []\n        let false_row = []\n        for (let x = 0; x < this.grid_w; x++) {\n          new_row.push('')\n          empty_row.push('')\n          false_row.push(false)\n        }\n        new_grid.push(new_row)\n        empty_grid.push(empty_row)\n        false_grid.push(false_row)\n      }\n      // Add bombs, avoid starting tile and adjecant tiles\n      let placed_bombs = 0\n      for (let attempt = 0; attempt < 100000; attempt++) {\n        const bombx = this.randomNumber(0, this.grid_w-1)\n        const bomby = this.randomNumber(0, this.grid_h-1)\n        const tile = new_grid[bomby][bombx]\n        // Ensure 3x3 of no bombs around starting area\n        if (Math.abs(start_x-bombx) <= 1)\n          if (Math.abs(start_y-bomby) <= 1)\n            continue\n        if (tile !== '')\n          continue\n        // Success\n        new_grid[bomby][bombx] = 'B'\n        placed_bombs++\n        if (placed_bombs >= this.bombs)\n          break\n      }\n      // Add numbers\n      for (let y = 0; y < this.grid_h; y++) {\n        for (let x = 0; x < this.grid_w; x++) {\n          const current = new_grid[y][x]\n          if (current === 'B')\n            continue\n          \n          // Count nearby bombs\n          let nearby = 0\n          const neighbours = this.getNeighbours(x,y)\n          for (const neighbour of neighbours) {\n            const neighbour_x = neighbour[0]\n            const neighbour_y = neighbour[1]\n            if (new_grid[neighbour_y][neighbour_x] === 'B')\n              nearby++\n          }\n          if (nearby !== 0)\n            new_grid[y][x] = \"\"+nearby\n        }\n      }\n      // Assign\n      this.hidden_grid = new_grid\n      this.visible_grid = empty_grid\n      this.isOpen_grid = false_grid\n    },\n    startTime() {\n      clearInterval(this.timer_loop)\n      this.start_time = +Date.now()\n      this.timer_loop = setInterval(() => {\n        this.timerLoopFunction()\n      }, 33);\n    },\n    stopTimer() {\n      clearInterval(this.timer_loop)\n      this.timerLoopFunction()\n    },\n    timerLoopFunction() {\n      let timediff = (+Date.now() - this.start_time)/1000\n\n      let minutes = Math.floor(timediff/60)\n      minutes = (minutes+\"\").padStart(2,\"0\")\n      let seconds = (timediff%60).toFixed(2)\n      seconds = (seconds+\"\").padStart(5,\"0\")\n\n      this.display_time = minutes+\":\"+seconds\n    },\n  },\n  mounted() {\n  },\n  unmounted() {\n    clearInterval(this.timer_loop)\n  }\n}\n</script>\n<style scoped>\n.game {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: #fae8e0;\n  min-height: 400px;\n  min-width: 400px;\n}\n.game table {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n.cell {\n  position: relative;\n  height: 30px;\n  width: 30px;\n  background: #b6e2d3;\n  border-radius: 30%;\n  margin: 2px;\n  cursor: pointer;\n}\n.open-cell {\n  background: #d8a7b1;\n}\n.indicator {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  user-select: none;\n}\n#backlink {\n  position: fixed;\n  top: 0px;\n  left: 3px;\n}\n</style>","import { render } from \"./MinesweeperView.vue?vue&type=template&id=0fc01045&scoped=true&lang=true\"\nimport script from \"./MinesweeperView.vue?vue&type=script&lang=js\"\nexport * from \"./MinesweeperView.vue?vue&type=script&lang=js\"\n\nimport \"./MinesweeperView.vue?vue&type=style&index=0&id=0fc01045&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/julius/Työpöytä/Vue/VueToys/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0fc01045\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","onContextmenu","_createElementBlock","_Fragment","_renderList","$data","y","key","x","$options","onClick","onMousedown","_toDisplayString","_createVNode","_component_router_link","to","id","data","visible_grid","hidden_grid","isOpen_grid","grid_w","grid_h","bombs","generate_grid_on_click","game_over","start_time","timer_loop","display_time","methods","randomNumber","min","max","Math","floor","random","getNeighbours","neighbours","diffs","pos","spot_x","spot_y","this","push","tryGet","from","default_value","current","undefined","getDisplayType","getDisplayCharacter","click","generateGrid","startTime","popOpen","rclick","value","neighbour","neighbour_x","neighbour_y","loseGame","checkWinGame","endGame","hidden","visible","unopened","winGame","stopTimer","$confetti","addConfetti","useToast","timeout","start_x","start_y","new_grid","empty_grid","false_grid","new_row","empty_row","false_row","placed_bombs","attempt","bombx","bomby","tile","abs","nearby","clearInterval","Date","now","setInterval","timerLoopFunction","timediff","minutes","padStart","seconds","toFixed","mounted","unmounted","__exports__","render"],"sourceRoot":""}