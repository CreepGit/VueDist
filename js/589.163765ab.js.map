{"version":3,"file":"js/589.163765ab.js","mappings":"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","sources":["webpack://hello-world/./src/views/ChatView.vue","webpack://hello-world/./src/views/ChatView.vue?fcb5"],"sourcesContent":["<template>\r\n  <div class=\"banner\">\r\n    <div class=\"logo\">\r\n      <img src=\"https://i.imgur.com/jyXZ7vo.png\" alt=\"\">\r\n      <span>4chat</span>  \r\n    </div>\r\n    <div class=\"status\" title=\"Connection status to the server.\">\r\n      <div class=\"statusIndicator\" :style=\"{background: indicatorColor}\"></div>\r\n      <span class=\"statusTex\">{{ statusText||'Loading' }}</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"chatlist\" ref=\"chatList\">\r\n    <table class=\"tableclass\">\r\n      <tr>\r\n        <th class=\"author_col\">Author</th>\r\n        <th>Message</th>\r\n      </tr>\r\n      <tr v-for=\"(message, i) in messages\" :key=\"i\" :class=\"{systemRow: isSystem(message['id'])}\">\r\n        <td class=\"author_col\" @click=\"editUser(message['id'])\" :style=\"{cursor: isSystem(message['id'])?'':'pointer', color: localUserColours[message['id']]||'#2c3e50' }\">\r\n          <span>{{localUsers[message['id']]||message[\"author\"]||'FAILED'}}</span>\r\n          <span v-if=\"!isSystem(message['id'])\">#{{message['id']}}</span>\r\n        </td>\r\n        <td>\r\n          {{message['message']||\"FAILED\"}}\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n  <form class=\"inputs\" @submit.prevent=\"sendMessage\">\r\n    <input class=\"textInput\" maxlength=\"495\" ref=\"textInput\" type=\"text\" :disabled=!canMessage>\r\n    <input class=\"submitInput\" type=\"submit\" :disabled=!canMessage>\r\n  </form>\r\n  <!-- MODALS -->\r\n  <div class=\"modalCover\" v-show=\"anyModalOpen\" @click=\"closeAllModals\"></div>\r\n  <div class=\"editUsernameModal\" v-show=\"selectedUser!=null\">\r\n    <h3>Edit {{getLocalUser(selectedUser)}}#{{selectedUser}}</h3>\r\n    <form @submit.prevent=\"finishEditUserData\">\r\n      <input ref=\"inputUsernameEdit\" type=\"name\" :value=\"getLocalUser(selectedUser)\">\r\n      <input type=\"submit\" value=\"save\">\r\n    </form>\r\n    <table class=\"paletteTable\">\r\n      <tr v-for=\"(row, i) in userColourPalette\" :key=\"i\">\r\n        <td v-for=\"(col, i) in row\" :key=\"i\">\r\n          <div class=\"paletteColour\" :style=\"{background: col}\" @click=\"editUserColour(col)\"></div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {return {\r\n    connection: null,\r\n    /* Messages: {\r\n      author: \"DisplayName\",\r\n      message: \"Hello World!\",\r\n      id: 4455, (0 for CLIENT, 1 for SERVER),\r\n    } */\r\n    messages: [],\r\n    newMessages: 0,\r\n    connectionStatus: 2, // 0 Offline 1 Online 2 Connecting\r\n    statusText: \"Loading\",\r\n    documentOldName: '',\r\n    /* id: 'UserName' */\r\n    localUsers: {},\r\n    /* id: '#800' */\r\n    localUserColours: {},\r\n    /* Intervals */\r\n    reconnector: null,\r\n    documentNamer: null,\r\n    /* MODALS */\r\n    selectedUser: null,\r\n    userColourPalette: [\r\n      [\"#800\",\"#880\",\"#109\",\"#07e\"],\r\n      [\"#809\",\"#117705\",\"#804408\",\"#2c3e50\"],\r\n    ]\r\n  }},\r\n  mounted() {\r\n    this.connect()\r\n    this.documentOldName = document.title\r\n    this.start_reconnector()\r\n    this.documentNamer = setInterval(this.documentNameLoop, 500)\r\n    // Fixes 100vh on mobile\r\n    document.documentElement.style.setProperty(\"--vh\", `${window.innerHeight}px`)\r\n  },\r\n  unmounted() {\r\n    this.connection.close(1000);\r\n    clearInterval(this.reconnector)\r\n    clearInterval(this.documentNamer)\r\n    document.title = this.documentOldName\r\n  },\r\n  watch: {\r\n    connection(now) {\r\n      if (now == null) {\r\n        this.start_reconnector()\r\n      } else {\r\n        clearInterval(this.reconnector)\r\n      }\r\n    },\r\n    connectionStatus(now, old) {\r\n      if (now == 1) {\r\n        // Server does this part now!\r\n        // this.messages.push({id: 0, author: 'CLIENT', message: 'CONNECTED'})\r\n      }\r\n      else if (old == 1) {\r\n        this.messages.push({id: 0, author: 'CLIENT', message: 'LOST CONNECTION'})\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    connect() {\r\n      this.connection = new WebSocket(\"wss://websocket-server.creepreplit.repl.co/\");\r\n      this.connection.onmessage = (data) => {\r\n        const msg = JSON.parse(data.data)\r\n        const user = this.getLocalUser(msg['id'])\r\n        if (msg[\"type\"] == \"message\"){\r\n          // Use server provided author if possible\r\n          let author = msg[\"author\"] || `${user}`\r\n          this.messages.push({\r\n            id: msg['id'], author: author, message: msg[\"content\"]\r\n          })\r\n\r\n          if (!document.hasFocus())\r\n            this.newMessages += 1\r\n\r\n          // Scroll bottom on new message if near bottom\r\n          const el = this.$refs.chatList\r\n          const distanceFromBottom = el.scrollHeight - el.clientHeight - el.scrollTop\r\n          if (distanceFromBottom < 10) {\r\n            setTimeout(() => {\r\n              el.scrollTo(0, el.scrollHeight)\r\n            }, 0)\r\n          }\r\n        } else if (msg[\"type\"] == 'info')\r\n          this.statusText = `Online ${msg[\"user_count\"]}`\r\n        else {\r\n          this.messages.push({id: 0, author: 'CLIENT', message: `UNKNOWN TYPE ${msg['type']}`})\r\n          console.log(\"BAD DATA\", msg)\r\n        }\r\n      }\r\n      this.connection.onclose = () => {\r\n        this.connection = null\r\n        this.connectionStatus = 0\r\n        this.statusText = `Offline`\r\n      }\r\n      this.connection.onopen = () => {\r\n        this.connection.send(JSON.stringify({\"type\": \"info\"}))\r\n        this.statusText = `Connecting`\r\n        this.connectionStatus = 1\r\n      }\r\n    },\r\n    sendMessage() {\r\n      const textInput = this.$refs.textInput\r\n      const msg = textInput.value\r\n      if (msg == \"\") return\r\n      textInput.value = \"\"\r\n      this.connection.send(JSON.stringify({\r\n        \"type\": \"message\",\r\n        \"content\": msg,\r\n      }))\r\n    },\r\n    start_reconnector() {\r\n      this.reconnector = setInterval(() => {\r\n        this.connectionStatus = 2 // Reconnecting\r\n        this.connect()\r\n      }, 5000)\r\n    },\r\n    getLocalUser(id) {\r\n      if (id == null) return\r\n      if (id <= 1000) return\r\n      const user = this.localUsers[id]\r\n      if (user) return user\r\n\r\n      const newName = \"User\"\r\n      this.localUsers[id] = newName\r\n      return newName\r\n    },\r\n    editUser(id) {\r\n      if (id <= 1000) return\r\n      this.selectedUser = id\r\n      setTimeout(() => this.$refs.inputUsernameEdit.focus(), 0)\r\n    },\r\n    closeAllModals() {\r\n      this.selectedUser = null\r\n    },\r\n    finishEditUserData() {\r\n      const el = this.$refs.inputUsernameEdit\r\n      let newUsers = {...this.localUsers}\r\n      newUsers[this.selectedUser] = el.value\r\n      this.localUsers = newUsers\r\n      this.selectedUser = null\r\n    },\r\n    editUserColour(col) {\r\n      let newCols = {...this.localUsers}\r\n      newCols[this.selectedUser] = col\r\n      this.localUserColours = newCols\r\n    },\r\n    isSystem(id) {\r\n      return id <= 1000\r\n    },\r\n    documentNameLoop() {\r\n      if (document.hasFocus())\r\n        this.newMessages = 0\r\n\r\n      if (this.newMessages)\r\n        document.title = `(${this.newMessages}) 4Chat`\r\n      else\r\n        document.title = `4Chat`\r\n    }\r\n  },\r\n  computed: {\r\n    indicatorColor() {\r\n      if (this.connectionStatus == 0)\r\n        return \"#f33\"\r\n      else if (this.connectionStatus == 1)\r\n        return \"#8f2\"\r\n      return \"#fff\"\r\n    },\r\n    canMessage() {\r\n      return this.connectionStatus == 1\r\n    },\r\n    anyModalOpen() {\r\n      return this.selectedUser != null\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chatlist {\r\n  height: calc(100vh - 95px);\r\n  overflow-y: scroll;\r\n  max-width: 750px;\r\n  margin: 5px auto;\r\n  border: 1px solid black;\r\n  padding: 0 10px;\r\n  border-radius: 20px;\r\n  list-style: none;\r\n}\r\n.chatlist::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n.tableclass {\r\n  width: 100%;\r\n}\r\n.tableclass tr {\r\n  border-bottom: 1px solid #eee;\r\n}\r\n.systemRow {\r\n  font-style: italic;\r\n}\r\n.tableclass tr:hover {\r\n  background: #eee;\r\n}\r\n.author_col {\r\n  width: 25%;\r\n}\r\n.inputs {\r\n  max-width: 750px;\r\n  margin: 5px auto;\r\n  border: 1px solid black;\r\n  height: 30px;\r\n  border-radius: 20px;\r\n}\r\n.inputs *:disabled {\r\n  background: #eee;\r\n  cursor: help;\r\n}\r\n.textInput {\r\n  height: 100%;\r\n  width: calc(100% - 80px);\r\n  border: none;\r\n  background: none;\r\n  border-radius: 20px 0 0 20px;\r\n  padding-left: 5px;\r\n}\r\n.submitInput {\r\n  height: 100%;\r\n  width: 80px;\r\n  border: none;\r\n  background: none;\r\n  border-radius: 0 20px 20px 0;\r\n}\r\n.banner {\r\n  background: rgb(255, 231, 215);\r\n  position: relative;\r\n  border-bottom: 2px solid #800;\r\n  height: 50px;\r\n}\r\n.banner img {\r\n  margin: 0 5px 0 10px;\r\n  height: 40px;\r\n  width: 40px;\r\n}\r\n.logo {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 50%;\r\n  transform: translate(0, -50%);\r\n}\r\n.logo span {\r\n  font-size: 230%;\r\n  transform: translate(0, -3px);\r\n  position: absolute;\r\n  color: #800;\r\n}\r\n.status {\r\n  border: 1px solid black;\r\n  position: absolute;\r\n  height: 80%;\r\n  right: 10px;\r\n  width: 120px;  \r\n  top: 50%;\r\n  transform: translate(0, -50%);\r\n  border-radius: 10px;\r\n  background: #8002;\r\n  cursor: help;\r\n}\r\n.statusIndicator {\r\n  position: absolute;\r\n  left: 5px;\r\n  background: white;\r\n  height: 30px;\r\n  width: 30px;\r\n  border-radius: 50%;\r\n  top: 50%;\r\n  transform: translate(0, -50%);\r\n  box-shadow: inset -5px -5px 6px #000a;\r\n}\r\n.statusTex {\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translate(0, -50%);\r\n  left: 40px;\r\n}\r\n.modalCover {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #0009;\r\n  position: fixed;\r\n  top: 0;\r\n}\r\n.editUsernameModal {\r\n  width: 300px;\r\n  height: 200px;\r\n  background: white;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  border-radius: 25px;\r\n  padding: 20px 0 0 0;\r\n}\r\n.paletteTable {\r\n  margin: 10px auto 0 auto;\r\n}\r\n.paletteTable tr td {\r\n  padding: 5px;\r\n}\r\n.paletteColour {\r\n  height: 25px;\r\n  width: 35px;\r\n  border: 1px solid black;\r\n  margin: 2px;\r\n}\r\n</style>","import { render } from \"./ChatView.vue?vue&type=template&id=b28aeb60&scoped=true\"\nimport script from \"./ChatView.vue?vue&type=script&lang=js\"\nexport * from \"./ChatView.vue?vue&type=script&lang=js\"\n\nimport \"./ChatView.vue?vue&type=style&index=0&id=b28aeb60&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\Omistaja\\\\Desktop\\\\Webstuff\\\\hello-world\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b28aeb60\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","src","alt","title","ref","type","value","_hoisted_2","style","background","$options","_toDisplayString","$data","_hoisted_7","_createElementBlock","_Fragment","_renderList","message","i","key","systemRow","onClick","cursor","color","_hoisted_9","onSubmit","maxlength","disabled","_hoisted_14","row","col","data","connection","messages","newMessages","connectionStatus","statusText","documentOldName","localUsers","localUserColours","reconnector","documentNamer","selectedUser","userColourPalette","mounted","this","connect","document","start_reconnector","setInterval","documentNameLoop","documentElement","setProperty","window","innerHeight","unmounted","close","clearInterval","watch","now","old","push","id","author","methods","WebSocket","onmessage","msg","JSON","parse","user","getLocalUser","hasFocus","el","$refs","chatList","distanceFromBottom","scrollHeight","clientHeight","scrollTop","setTimeout","scrollTo","console","log","onclose","onopen","send","stringify","sendMessage","textInput","newName","editUser","inputUsernameEdit","focus","closeAllModals","finishEditUserData","newUsers","editUserColour","newCols","isSystem","computed","indicatorColor","canMessage","anyModalOpen","__exports__","render"],"sourceRoot":""}